services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: ${DOCKER_USERNAME}/certificados:${IMAGE_TAG:-latest}
    container_name: certificados-app
    restart: unless-stopped
    environment:
      - APP_NAME=${APP_NAME:-Certificados}
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL:-http://localhost}
      - DB_CONNECTION=pgsql
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_DATABASE=${DB_DATABASE:-app}
      - DB_USERNAME=${DB_USERNAME:-app}
      - DB_PASSWORD=${DB_PASSWORD}
      - CACHE_DRIVER=file
      - SESSION_DRIVER=file
      - QUEUE_CONNECTION=sync
      - MAIL_MAILER=${MAIL_MAILER:-smtp}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
    volumes:
      - app-storage:/var/www/storage
      - app-bootstrap:/var/www/bootstrap/cache
    depends_on:
      - postgresql
    networks:
      - certificados-network
    ports:
      - "80:80"

  postgresql:
    image: postgres:14-alpine
    container_name: certificados-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_DATABASE:-app}
      - POSTGRES_USER=${DB_USERNAME:-app}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database:/database
    networks:
      - certificados-network
    ports:
      - "5432:5432"

  # Opcional: Redis para cache y sessions
  redis:
    image: redis:7-alpine
    container_name: certificados-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - certificados-network

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-storage:
    driver: local
  app-bootstrap:
    driver: local

networks:
  certificados-network:
    driver: bridge
